/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package BatailleNavale;

import java.util.HashSet;

/**
 *
 * @author aabdo
 */
public class FrameChoixBateau extends javax.swing.JDialog {
    private Direction sens;
    private String bateauChoisi;
    private boolean aValide;
    
    public FrameChoixBateau() {
        initComponents();
        aValide=false;
        sens=Direction.vertical;
        bateauChoisi="porteavion";
        this.setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        choixBateau = new javax.swing.ButtonGroup();
        choixSens = new javax.swing.ButtonGroup();
        jProgressBar1 = new javax.swing.JProgressBar();
        selPorteAvion = new javax.swing.JRadioButton();
        selCroiseur = new javax.swing.JRadioButton();
        selContreTorpilleur = new javax.swing.JRadioButton();
        selSousMarin = new javax.swing.JRadioButton();
        selTorpilleur = new javax.swing.JRadioButton();
        selVertical = new javax.swing.JRadioButton();
        selHorizontal = new javax.swing.JRadioButton();
        valider = new javax.swing.JButton();
        jTextArea1 = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Choix bateau");
        setAlwaysOnTop(true);
        setResizable(false);

        choixBateau.add(selPorteAvion);
        selPorteAvion.setSelected(true);
        selPorteAvion.setText("Porte Avion (5 cases)");
        selPorteAvion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selPorteAvionActionPerformed(evt);
            }
        });

        choixBateau.add(selCroiseur);
        selCroiseur.setText("Croiseur (4 cases)");
        selCroiseur.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selCroiseurActionPerformed(evt);
            }
        });

        choixBateau.add(selContreTorpilleur);
        selContreTorpilleur.setText("Contre Torpilleur (3 cases)");
        selContreTorpilleur.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selContreTorpilleurActionPerformed(evt);
            }
        });

        choixBateau.add(selSousMarin);
        selSousMarin.setText("Sous Marin (3 cases)");
        selSousMarin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selSousMarinActionPerformed(evt);
            }
        });

        choixBateau.add(selTorpilleur);
        selTorpilleur.setText("Torpilleur (2 cases)");
        selTorpilleur.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selTorpilleurActionPerformed(evt);
            }
        });

        choixSens.add(selVertical);
        selVertical.setSelected(true);
        selVertical.setText("Vertical");
        selVertical.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selVerticalActionPerformed(evt);
            }
        });

        choixSens.add(selHorizontal);
        selHorizontal.setText("Horizontal");
        selHorizontal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selHorizontalActionPerformed(evt);
            }
        });

        valider.setText("Valider");
        valider.setActionCommand("valider");
        valider.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                validerActionPerformed(evt);
            }
        });

        jTextArea1.setEditable(false);
        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jTextArea1.setText("Séléctionnez le bateau que vous voulez ainsi que la direction,\ncliquez sur valider puis cliquez sur la grille de gauche pour\nplacer le bateau");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(selPorteAvion)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(selCroiseur)
                                .addComponent(selTorpilleur)
                                .addComponent(selSousMarin)
                                .addComponent(selContreTorpilleur))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(selVertical)
                                .addComponent(selHorizontal)
                                .addComponent(valider, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addComponent(jTextArea1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 511, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(30, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTextArea1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 21, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(selVertical)
                        .addGap(18, 18, 18)
                        .addComponent(selHorizontal))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(selPorteAvion)
                        .addGap(18, 18, 18)
                        .addComponent(selCroiseur)
                        .addGap(18, 18, 18)
                        .addComponent(selContreTorpilleur)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(selSousMarin)
                        .addGap(18, 18, 18)
                        .addComponent(selTorpilleur, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(valider, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(35, 35, 35))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Evenemet activé si "Croiseur" est selectionné
     * modifie bateauChoisi en "Croiseur"
     * @param evt 
     */
    private void selCroiseurActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selCroiseurActionPerformed
        bateauChoisi="croiseur";
    }//GEN-LAST:event_selCroiseurActionPerformed

    /**
     * Evenemet activé si "Porte avion" est selectionné
     * modifie bateauChoisi en "Porte avion"
     * @param evt 
     */
    private void selPorteAvionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selPorteAvionActionPerformed
        bateauChoisi="porteavion";
    }//GEN-LAST:event_selPorteAvionActionPerformed

    /**
     * Evenemet activé si "Contre torpilleur" est selectionné
     * modifie bateauChoisi en "Contre torpilleur"
     * @param evt 
     */
    private void selContreTorpilleurActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selContreTorpilleurActionPerformed
        bateauChoisi="contretorpilleur";
    }//GEN-LAST:event_selContreTorpilleurActionPerformed

    /**
     * Evenemet activé si "Sous marin" est selectionné
     * modifie bateauChoisi en "Sous marin"
     * @param evt 
     */
    private void selSousMarinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selSousMarinActionPerformed
        bateauChoisi="sousmarin";
    }//GEN-LAST:event_selSousMarinActionPerformed

    /**
     * Evenemet activé si "Torpilleur" est selectionné
     * modifie bateauChoisi en "Torpilleur"
     * @param evt 
     */
    private void selTorpilleurActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selTorpilleurActionPerformed
        bateauChoisi="torpilleur";
    }//GEN-LAST:event_selTorpilleurActionPerformed

    /**
     * Evenemet activé si "Vertical" est selectionné
     * modifie sens en "vertical"
     * @param evt 
     */
    private void selVerticalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selVerticalActionPerformed
        sens=Direction.vertical;
    }//GEN-LAST:event_selVerticalActionPerformed

    /**
     * Evenemet activé si "Croiseur" est selectionné
     * modifie sens en "horizontal"
     * @param evt 
     */
    private void selHorizontalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selHorizontalActionPerformed
        sens=Direction.horizontal;
    }//GEN-LAST:event_selHorizontalActionPerformed

    /**
     * Evenemet activé si l'utilisateur clique sur "Valider"
     * cache la JFrame et change aValide en "true"
     * @param evt 
     */
    private void validerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_validerActionPerformed
        aValide=true;
        this.setVisible(false);
    }//GEN-LAST:event_validerActionPerformed

    /**
     * methode appelée quand l'utilisateur doit ajouter un nouveau bateau à la grille
     * ouvre la JFrame, verifie quels bateaux sont déjà sur la grilleBN et supprime ces choix.
     * @param lesBateaux bateaux déjà sur la grilleBN
     */
    public void nouveauBateau(HashSet<Bateau> lesBateaux){
        aValide=false;
        for(Bateau b:lesBateaux){
            switch(b.getClass().getSimpleName()){
                case"PorteAvion":
                    selPorteAvion.setEnabled(false);
                    selPorteAvion.setSelected(false);
                    break;
                case"Croiseur":
                    selCroiseur.setEnabled(false);
                    selCroiseur.setSelected(false);
                    break;
                case"Torpilleur":
                    selTorpilleur.setEnabled(false);
                    selTorpilleur.setSelected(false);
                    break;
                case"ContreTorpilleur":
                    selContreTorpilleur.setEnabled(false);
                    selContreTorpilleur.setSelected(false);
                    break;
                case"SousMarin":
                    selSousMarin.setEnabled(false);
                    selSousMarin.setSelected(false);
                    break;
            }
        }
        this.setVisible(true);
    }
    
    /**
     * 
     * @return la valeur de aValide (true si l'utilisateur a cliqué sur le bouton)
     */
    public boolean getValide(){
        return aValide;
    }
    
    /**
     * 
     * @return le bateau selectionné (sous forme de string)
     */
    public String getBateau(){
        return bateauChoisi;
    }
    
    /**
     * 
     * @return le sens selectionné
     */
    public Direction getSens(){
        return sens;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup choixBateau;
    private javax.swing.ButtonGroup choixSens;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JRadioButton selContreTorpilleur;
    private javax.swing.JRadioButton selCroiseur;
    private javax.swing.JRadioButton selHorizontal;
    private javax.swing.JRadioButton selPorteAvion;
    private javax.swing.JRadioButton selSousMarin;
    private javax.swing.JRadioButton selTorpilleur;
    private javax.swing.JRadioButton selVertical;
    private javax.swing.JButton valider;
    // End of variables declaration//GEN-END:variables
}
